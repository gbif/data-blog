name_backbone_checklist() %>% # match to backbone
filter(matchtype == "EXACT" & status == "ACCEPTED") %>% # get only accepted and matched names
filter(kingdom == "Plantae") %>% # remove anything that might have matched to a non-plant
pull(usagekey) # get the gbif taxonkeys
library(dplyr)
library(readr)
library(rgbif) # for occ_download
# The 60,000 tree names file I downloaded from BGCI
file_url <- "https://data-blog.gbif.org/post/2019-07-11-downloading-long-species-lists-on-gbif_files/global_tree_search_trees_1_3.csv"
# match the names
gbif_taxon_keys <-
readr::read_csv(file_url) %>%
head(1000) %>% # use only first 1000
pull("Taxon name") %>% # use fewer names if you want to just test
name_backbone_checklist() %>% # match to backbone
filter(matchtype == "EXACT" & status == "ACCEPTED") %>% # get only accepted and matched names
filter(kingdom == "Plantae") %>% # remove anything that might have matched to a non-plant
pull(usagekey) # get the gbif taxonkeys
gbif_taxon_keys
readr::read_csv(file_url) %>%
head(1000) %>% # use only first 1000
pull("Taxon name") %>% # use fewer names if you want to just test
name_backbone_checklist()
blogdown:::serve_site()
occ_download(pred("country", "BW"),format = "SIMPLE_PARQUET")
rgbif::occ_download(pred("country", "BW"),format = "SIMPLE_PARQUET")
rgbif::occ_download(rgbif::pred("country", "BW"),format = "SIMPLE_PARQUET")
occ_download_wait('0137020-210914110416597')
rgbif::occ_download_wait('0137020-210914110416597')
occ_download_get('0137020-210914110416597')
rgbif::occ_download_get('0137020-210914110416597')
library(zip)
blogdown:::serve_site()
rgbif::occ_download(rgbif::pred("country", "BW"),format = "SIMPLE_CSV")
occ_download_wait('0138720-210914110416597')
rgbif::occ_download_wait('0138720-210914110416597')
?zip::unzip()
zip::unzip("C:/Users/ftw712/Desktop/0137020-210914110416597.zip")
zip::unzip("C:/Users/ftw712/Desktop/0137020-210914110416597.zip",exdir="C:/Users/ftw712/Desktop/")
rgbif::occ_download(rgbif::pred("country", "BW"),format = "SIMPLE_CSV")
occ_download_wait('0138730-210914110416597')
rgbif::occ_download_wait('0138730-210914110416597')
occ_download_get('0138730-210914110416597')
rgbif::occ_download_get('0138730-210914110416597')
setwd
setwd("C:/Users/ftw712/Desktop/")
zip::unzip('0137020-210914110416597.zip',exdir="/gbif_parquet")
zip::unzip('0137020-210914110416597.zip',exdir="C:/Users/ftw712/Desktop/gbif_parquet/")
zip::unzip('0137020-210914110416597.zip')
df <- arrow::open_dataset("occurrence.parquet")
df
df %>% glimpse()
library(dplyr)
df %>% glimpse()
library(arrow)
library(dplyr)
local_df <- open_dataset("occurrence.parquet")
local_df %>%
filter(
countrycode == "BW",
kingdom == "Fungi"
) %>%
select(species) %>%
collect()
local_df %>% ncol()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("writexl")
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
library(dplyr)
library(CoordinateCleaner)
name_backbone("Calopteryx xanthostoma")
library(rgbif)
name_backbone()
name_backbone("Calopteryx xanthostoma")
name_backbone("Calopteryx xanthostoma")$usageKey
gbif_download <- occ_download(
pred("taxonKey", taxonkey),
pred("hasCoordinate", TRUE),
pred("hasGeospatialIssue", FALSE),
format = "SIMPLE_CSV"
) %>%
occ_download_wait()
taxonkey <- name_backbone("Calopteryx xanthostoma")$usageKey
gbif_download <- occ_download(
pred("taxonKey", taxonkey),
pred("hasCoordinate", TRUE),
pred("hasGeospatialIssue", FALSE),
format = "SIMPLE_CSV"
) %>%
occ_download_wait()
gbif_download
gbif_download %>%unclass()
gbif_download %>%
occ_download_wait() %>%
occ_download_get(.$key) %>%
occ_download_import() %>%
glimpse()
gbif_download <- occ_download(
pred("taxonKey", taxonkey),
pred("hasCoordinate", TRUE),
pred("hasGeospatialIssue", FALSE),
format = "SIMPLE_CSV"
)
occ_download_wait()
gbif_download <- occ_download(
pred("taxonKey", taxonkey),
pred("hasCoordinate", TRUE),
pred("hasGeospatialIssue", FALSE),
format = "SIMPLE_CSV"
)
occ_download_wait(gbif_download)
occ_download_get(gbif_download) %>%
occ_download_import() %>%
glimpse()
occ_download_get(gbif_download) %>%
occ_download_import() %>%
glimpse() %>%
select(establishmentMeans) %>%
unique()
occ_download_get(gbif_download) %>%
occ_download_import() %>%
glimpse()
occ_download_get(gbif_download) %>%
occ_download_import() %>%
filter(occurrencestatus  == "PRESENT") %>%
filter(!basisofrecord %in% c("FOSSIL_SPECIMEN","LIVING_SPECIMEN")) %>%
filter(year >= 1900) %>%
filter(coordinateprecision < 0.01 | is.na(coordinateprecision)) %>%
filter(coordinateuncertaintyinmeters < 10000 | is.na(coordinateuncertaintyinmeters)) %>%
filter(!coordinateuncertaintyinmeters %in% c(301,3036,999,9999)) %>%
filter(!decimallatitude == 0 | !decimallongitude == 0) %>%
cc_cen(buffer = 2000) %>% # remove country centroids within 2km
cc_cap(buffer = 2000) %>% # remove capitals centroids within 2km
cc_inst(buffer = 2000) %>% # remove zoo and herbaria within 2km
cc_sea() %>% # remove from ocean
distinct(decimallongitude,decimallatitude,specieskey,datasetkey, .keep_all = TRUE) %>%
glimpse() # look at results of pipeline
gbif_download %>%
occ_download_get() %>%
occ_download_import() %>%
filter(occurrencestatus  == "PRESENT") %>%
filter(!basisofrecord %in% c("FOSSIL_SPECIMEN","LIVING_SPECIMEN")) %>%
filter(year >= 1900) %>%
filter(coordinateprecision < 0.01 | is.na(coordinateprecision)) %>%
filter(coordinateuncertaintyinmeters < 10000 | is.na(coordinateuncertaintyinmeters)) %>%
filter(!coordinateuncertaintyinmeters %in% c(301,3036,999,9999)) %>%
filter(!decimallatitude == 0 | !decimallongitude == 0) %>%
cc_cen(buffer = 2000) %>% # remove country centroids within 2km
cc_cap(buffer = 2000) %>% # remove capitals centroids within 2km
cc_inst(buffer = 2000) %>% # remove zoo and herbaria within 2km
cc_sea() %>% # remove from ocean
distinct(decimallongitude,decimallatitude,specieskey,datasetkey, .keep_all = TRUE) %>%
glimpse() # look at results of pipeline
gbif_download %>%
occ_download_get() %>%
occ_download_import() %>%
glimpse()
gbif_download %>%
occ_download_get() %>%
occ_download_import() %>%
setNames(tolower(names(.))) %>% # set lowercase column names to work with CoordinateCleaner
filter(occurrencestatus  == "PRESENT") %>%
filter(!basisofrecord %in% c("FOSSIL_SPECIMEN","LIVING_SPECIMEN")) %>%
filter(year >= 1900) %>%
filter(coordinateprecision < 0.01 | is.na(coordinateprecision)) %>%
filter(coordinateuncertaintyinmeters < 10000 | is.na(coordinateuncertaintyinmeters)) %>%
filter(!coordinateuncertaintyinmeters %in% c(301,3036,999,9999)) %>%
filter(!decimallatitude == 0 | !decimallongitude == 0) %>%
cc_cen(buffer = 2000) %>% # remove country centroids within 2km
cc_cap(buffer = 2000) %>% # remove capitals centroids within 2km
cc_inst(buffer = 2000) %>% # remove zoo and herbaria within 2km
cc_sea() %>% # remove from ocean
distinct(decimallongitude,decimallatitude,specieskey,datasetkey, .keep_all = TRUE) %>%
glimpse() # look at results of pipeline
Here we see that GBIF is probably missing many names from **Coleoptera** (Beetles) and **Lepidoptera** (Butterflies/Moths). There are also many potential missing names within birds, but this might be due to the large number of occurrence records we get from this group (Passeriformes).
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
install.packages("blogdown")
blogdown:::serve_site()
blogdown::install_hugo()
blogdown:::serve_site()
?blogdown::install_hugo
?blogdown::install_hugo(version="0.91.2")
blogdown::install_hugo(version="0.91.2")
usethis::edit_r_profile()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
blogdown:::serve_site()
blogdown::install_hugo("0.91.2")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
install.pacakges("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
rgbif::map_fetch(z=3,x=7:9,y=0:2)
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
map_fetch(recordedBy="John Waller")
rgbif::map_fetch(recordedBy="John Waller")
blogdown:::insert_image_addin()
blogdown:::serve_site()
map_fetch(distanceFromCentroidInMeters=0,base_style="osm-bright")
rgbif::map_fetch(distanceFromCentroidInMeters=0,base_style="osm-bright")
blogdown:::insert_image_addin()
blogdown:::serve_site()
library(ggplot2)
library(sf)
library(rnaturalearth)
# occ_download(pred_default(),pred(taxonKey,"1427067"),format="SIMPLE_CSV")
worldmap <- ne_countries(scale = 'medium', type = 'map_units',returnclass = 'sf')
# a download I made of all Calopteryx splendens occurrences
d <- occ_download_get('0001707-230810091245214') %>%
occ_download_import()
library(rgbif)
library(rgbif)
library(ggplot2)
library(sf)
library(rnaturalearth)
# occ_download(pred_default(),pred(taxonKey,"1427067"),format="SIMPLE_CSV")
worldmap <- ne_countries(scale = 'medium', type = 'map_units',returnclass = 'sf')
# a download I made of all Calopteryx splendens occurrences
d <- occ_download_get('0001707-230810091245214') %>%
occ_download_import()
d_sf <- sf::st_as_sf(d, coords = c("decimalLongitude", "decimalLatitude"),
crs = "+proj=longlat +datum=WGS84")
# color occurrences by basisOfRecord
ggplot() +
geom_sf(data = worldmap) +
geom_sf(data = d_sf,aes(color=basisOfRecord))
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
rgbif::map_fetch(z=1,source="adhoc",style="green.poly",squareSize=64,bin="square",network_key="2b7c7b4f-4d4f-40d3-94de-c28b6fa054a6")
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
devtools::session_info()
install.packages("xfun")
detach(package:xfun, unload=TRUE)
detach("xfun", unload=TRUE)
detach(xfun, unload=TRUE)
detach(package:xfun, unload=TRUE)
detach("package:xfun", unload = TRUE)
install.packages("blogdown")
install.packages("blogdown")
install.packages("blogdown")
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
library(rgbif)
occ_download(pred("kingdomKey",1))
wkt <-"POLYGON((-25.590097833814866 67.36797082284382,-23.480722833814866 57.55501079675304,-11.85922931251639 48.116253070770014,-11.06821368751639 35.040814947897346,-5.220871503275703 36.05238722988097,0.08727518296961989 36.58181270233538,5.97594705796962 38.360417130163334,11.05163065171962 38.05287470688104,13.77624002671962 34.818790573829695,22.763056432969734 35.42981790410236,26.81837588418648 33.7522254701255,28.42237979043648 35.577383711587494,25.28028994668648 38.488444221666114,25.70026621683712 40.45124141982378,28.51276621683712 40.65158509436986,30.73200449808712 42.50866300168705,39.76276621683712 43.2992920488477,44.89185851767354 39.72449310268457,49.13258117392354 39.09637112224509,51.41773742392354 40.564294085922,48.38551086142354 44.73149923735219,40.10283463479777 47.34870300639049,36.292667676220844 50.71054843943353,31.77937571764403 52.155217662615115,32.92337545981809 53.4815090410304,31.012465174655176 55.7820636839676,28.486320514492263 56.33345478227602,27.706279014929237 57.720536826674056,27.98092501536621 59.59446999025547,31.85826020121965 62.8213741809747,29.638111279941654 67.14143405854475,30.830287253312918 69.7045846902049,32.55699159505423 72.19683235329389,-4.778271869380319 72.46719834933275,-25.590097833814866 67.36797082284382))"
nchar(wkt)
library(sf)
library(rnaturalearth)
# Get the US states data
states <- ne_states(country = "United States of America", returnclass = "sf")
states <- ne_states(country = "United States of America", returnclass = "sf")
# Filter for North Carolina
nc <- states[states$name == "North Carolina", ]
# Convert to WKT
nc_wkt <- st_as_text(nc$geometry)
nc_wkt
states <- ne_states(country = "United States of America", returnclass = "sf")
# Filter for North Carolina
nc <- states[states$name == "WYOMING", ]
# Convert to WKT
nc_wkt <- st_as_text(nc$geometry)
nc_wkt
states <- ne_states(country = "United States of America", returnclass = "sf")
# Filter for North Carolina
nc <- states[states$name == toupper("oklahoma"), ]
# Convert to WKT
nc_wkt <- st_as_text(nc$geometry)
nc_wkt
states
states_names
states$names
states$name
states <- ne_states(country = "United States of America", returnclass = "sf")
# Filter for North Carolina
nc <- states[states$name == "Oklahoma", ]
# Convert to WKT
nc_wkt <- st_as_text(nc$geometry)
nc_wkt
nchar(nc_wkt)
polygon_reversed <- st_geometry_modify(polygon_sf, function(x) {
lapply(x, function(polygon) {
list(do.call(rbind, rev(lapply(polygon, function(line) line[nrow(line):1, ]))))
})
})
library(sf)
polygon_reversed <- st_geometry_modify(polygon_sf, function(x) {
lapply(x, function(polygon) {
list(do.call(rbind, rev(lapply(polygon, function(line) line[nrow(line):1, ]))))
})
})
coords <- st_coordinates(polygon_sf[[1]])
polygon_sf = nc$geometry
coords <- st_coordinates(polygon_sf[[1]])
reversed_coords <- coords[nrow(coords):1,]
polygon_reversed <- st_polygon(list(reversed_coords))
POLYGON ((-103.0002 36.5002, -103.0004 36.62513, -103.0005 36.75, -103.0007 36.87488, -103.0008 36.99981, -102.8773 36.99981, -102.7538 36.99981, -102.6303 36.99981, -102.5068 36.99981, -102.3832 36.99981, -102.2597 36.99981, -102.1362 36.99981, -102.0396 36.99981, -101.7817 36.99981, -101.5506 36.99981, -101.3195 36.99981, -101.0884 36.99981, -100.8573 36.99981, -100.6262 36.99981, -100.3951 36.99981, -100.1641 36.99981, -99.93298 36.99981, -99.70187 36.99981, -99.47079 36.99981, -99.23969 36.99981, -99.00861 36.99981, -98.77751 36.99981, -98.54645 36.99981, -98.31535 36.99981, -98.08427 36.99981, -97.85322 36.99981, -97.62214 36.99981, -97.39106 36.99981, -97.15995 36.99981, -96.92885 36.99981, -96.69777 36.99981, -96.46669 36.99981, -96.23559 36.99981, -96.00451 36.99981, -95.77341 36.99981, -95.54233 36.99981, -95.31122 36.99981, -95.08015 36.99981, -94.84909 36.99981, -94.61804 36.99981, -94.61806 36.87481, -94.61818 36.74981, -94.61823 36.62481, -94.61833 36.49983, -94.59592 36.36062, -94.5735 36.22142, -94.55109 36.08218, -94.52868 35.943, -94.50632 35.80381, -94.48391 35.66463, -94.46147 35.52544, -94.43908 35.38621, -94.44472 35.16883, -94.45034 34.95152, -94.45598 34.73416, -94.46159 34.5168, -94.46723 34.29947, -94.47282 34.08211, -94.47846 33.86475, -94.4841 33.64742, -94.4894 33.64847, -94.51474 33.64927, -94.5329 33.65686, -94.5329 33.65, -94.58034 33.66348, -94.59496 33.66988, -94.59174 33.67554, -94.58845 33.67925, -94.60986 33.68106, -94.63596 33.67732, -94.64357 33.6858, -94.65505 33.69158, -94.66872 33.69541, -94.6831 33.69778, -94.68947 33.69732, -94.70107 33.69278, -94.70793 33.69158, -94.71367 33.69361, -94.72219 33.70262, -94.73962 33.70999, -94.75549 33.73343, -94.7697 33.73877, -94.78193 33.73965, -94.80724 33.7462, -94.87275 33.75591, -94.91027 33.78658, -94.92492 33.80843, -94.93015 33.81451, -94.93991 33.82041, -94.94868 33.82356, -94.955 33.82976, -94.95744 33.84493, -94.96008 33.84971, -94.96652 33.85525, -94.97448 33.85979, -94.98166 33.86165, -95.0164 33.86258, -95.03176 33.86673, -95.04745 33.87593, -95.07941 33.90306, -95.09699 33.91299, -95.12831 33.91934, -95.13371 33.92515, -95.13766 33.93211, -95.14304 33.93804, -95.15432 33.94419, -95.22031 33.96294, -95.23674 33.96067, -95.25568 33.94795, -95.26179 33.93306, -95.26325 33.91546, -95.2686 33.90457, -95.28019 33.91006, -95.28625 33.9021, -95.29374 33.8981, -95.30285 33.89497, -95.31371 33.8896, -95.32485 33.89534, -95.33176 33.89551, -95.33483 33.8865, -95.33549 33.87862, -95.33769 33.87437, -95.34191 33.87178, -95.34846 33.86912, -95.35705 33.86822, -95.44059 33.87054, -95.45151 33.86912, -95.45783 33.87618, -95.46442 33.88052, -95.47202 33.88279, -95.48161 33.8834, -95.48608 33.88118, -95.49196 33.87718, -95.49709 33.87532, -95.49931 33.87967, -95.50344 33.88455, -95.50571 33.88802, -95.50554 33.8896, -95.53713 33.88992, -95.54977 33.89573, -95.54025 33.91006, -95.54809 33.92554, -95.55912 33.93323, -95.57189 33.93887, -95.58495 33.94795, -95.59811 33.95208, -95.60952 33.94346, -95.62282 33.92437, -95.63039 33.92466, -95.64699 33.92976, -95.65012 33.92747, -95.67372 33.9169, -95.68395 33.91482, -95.69516 33.90962, -95.7051 33.90293, -95.71159 33.89644, -95.72199 33.89729, -95.73698 33.89566, -95.76962 33.89644, -95.77656 33.89002, -95.77228 33.86187, -95.78327 33.85545, -95.79016 33.8576, -95.79557 33.86226, -95.80095 33.86912, -95.80888 33.86687, -95.81474 33.86226, -95.82082 33.85545, -95.8489 33.85149, -95.86039 33.85396, -95.91696 33.88406, -95.92758 33.89302, -95.93788 33.89556, -95.95046 33.88946, -95.96098 33.87998, -95.96542 33.87254, -95.97253 33.87303, -95.98784 33.86626, -96.00641 33.85545, -96.0402 33.84329, -96.05422 33.8418, -96.10541 33.8418, -96.1153 33.8397, -96.13586 33.83028, -96.1467 33.82818, -96.15641 33.82117, -96.17409 33.78672, -96.18391 33.77354, -96.20273 33.76368, -96.22077 33.76204, -96.26337 33.76604, -96.28952 33.76304, -96.29587 33.75406, -96.29548 33.73912, -96.30121 33.71831, -96.32878 33.70186, -96.35861 33.72561, -96.38705 33.76282, -96.41047 33.78658, -96.4287 33.78973, -96.49645 33.78658, -96.50405 33.78992, -96.50781 33.79786, -96.5102 33.80713, -96.51349 33.81451, -96.51891 33.81875, -96.54081 33.82818, -96.54089 33.82818, -96.58198 33.83872, -96.59423 33.84976, -96.59807 33.85337, -96.60107 33.85777, -96.60251 33.86285, -96.60256 33.86827, -96.6007 33.87322, -96.58986 33.8919, -96.5925 33.89783, -96.6008 33.90489, -96.62556 33.91338, -96.63928 33.91617, -96.64936 33.91597, -96.65453 33.91348, -96.65881 33.91018, -96.66516 33.90166, -96.67807 33.87066, -96.68078 33.8659, -96.684 33.8617, -96.68762 33.85789, -96.69196 33.85462, -96.69948 33.85169, -96.70969 33.84925, -96.72885 33.84717, -96.73981 33.84761, -96.74841 33.84888, -96.7537 33.85137, -96.77983 33.86788, -96.79011 33.8722, -96.79831 33.87334, -96.83395 33.86929, -96.84352 33.86993, -96.85078 33.87193, -96.85556 33.87483, -96.86762 33.88533, -96.8739 33.89366, -96.87856 33.90342, -96.88476 33.93157, -96.8892 33.94146, -96.89406 33.94627, -96.9009 33.95083, -96.91452 33.95594, -96.92409 33.95733, -96.93271 33.95733, -96.96689 33.95208, -96.9726 33.95, -96.97787 33.94754, -96.98508 33.9399, -96.98417 33.92684, -96.98654 33.90264, -97.00217 33.87532, -97.01767 33.85855, -97.03981 33.85359, -97.07524 33.86165, -97.07385 33.8462, -97.06657 33.83941, -97.05854 33.83443, -97.05475 33.82442, -97.05915 33.81726, -97.07831 33.80791, -97.08268 33.79712, -97.08495 33.76792, -97.09382 33.74234, -97.11252 33.7261, -97.14411 33.72513, -97.16755 33.73758, -97.18718 33.76011, -97.20058 33.78658, -97.20558 33.81077, -97.20134 33.82769, -97.18242 33.85293, -97.17766 33.86912, -97.18032 33.8816, -97.1881 33.89288, -97.19919 33.90247, -97.21179 33.91006, -97.21799 33.90699, -97.23058 33.90271, -97.236 33.89954, -97.24042 33.89483, -97.24365 33.88738, -97.26144 33.86177, -97.26703 33.85545, -97.29374 33.87544, -97.30578 33.87798, -97.32165 33.86912, -97.32385 33.86609, -97.32949 33.85591, -97.33249 33.85174, -97.33776 33.84734, -97.34821 33.84192, -97.35268 33.83841, -97.36044 33.83365, -97.37175 33.8305, -97.43644 33.82696, -97.45246 33.83536, -97.45883 33.85855, -97.46125 33.87928, -97.46926 33.89214, -97.484 33.8993, -97.50663 33.90264, -97.57094 33.89898, -97.58574 33.90635, -97.59474 33.925, -97.59391 33.96211, -97.60283 33.97898, -97.64064 33.99451, -97.67997 33.9835, -97.71496 33.96004, -97.80075 33.88785, -97.84023 33.86802, -97.884 33.86165, -97.92665 33.87315, -97.94929 33.88316, -97.9591 33.89302, -97.95668 33.90787, -97.95495 33.91407, -97.95287 33.92437, -97.94609 33.94502, -97.94621 33.95467, -97.95287 33.96531, -97.94665 33.97705, -97.9486 33.98743, -97.95595 33.99532, -97.96594 33.99327, -98.00143 34.00357, -98.05051 34.01192, -98.0884 34.02784, -98.09006 34.06092, -98.09533 34.08211, -98.09128 34.11182, -98.09067 34.13829, -98.10651 34.14966, -98.13188 34.14649, -98.17878 34.13235, -98.20954 34.12918, -98.34328 34.14346, -98.3686 34.13753, -98.3843 34.1229, -98.39641 34.10474, -98.41096 34.08821, -98.41655 34.07901, -98.44069 34.0753, -98.49069 34.07517, -98.50578 34.08257, -98.53918 34.11497, -98.55187 34.12237, -98.55871 34.12779, -98.57473 34.15169, -98.586 34.15711, -98.61855 34.16292, -98.63068 34.16333, -98.65317 34.15967, -98.72006 34.13663, -98.73215 34.14209, -98.85754 34.1648, -98.8777 34.17078, -98.95283 34.21172, -98.97526 34.2159, -98.99135 34.21275, -99.0071 34.20723, -99.02856 34.2043, -99.04853 34.20655, -99.08644 34.21631, -99.10705 34.21858, -99.15353 34.21692, -99.17592 34.22061, -99.19304 34.23223, -99.19714 34.2483, -99.19973 34.30245, -99.19614 34.31414, -99.19206 34.32222, -99.20939 34.33975, -99.2402 34.36255, -99.24948 34.37832, -99.25568 34.39656, -99.2655 34.41155, -99.28552 34.4178, -99.3048 34.41888, -99.31489 34.4208, -99.32336 34.424, -99.33205 34.43101, -99.3362 34.43826, -99.33908 34.44524, -99.34387 34.45132, -99.36237 34.46226, -99.37736 34.4627, -99.3874 34.45144, -99.39338 34.40166, -99.40139 34.38638, -99.41647 34.38038, -99.44006 34.38243, -99.46081 34.38931, -99.49902 34.40684, -99.54728 34.41246, -99.55612 34.41036, -99.56498 34.40564, -99.57651 34.39463, -99.58347 34.3899, -99.60173 34.38504, -99.66225 34.3899, -99.6808 34.39468, -99.69357 34.40616, -99.71315 34.43084, -99.882 34.56492, -99.89169 34.57041, -99.91384 34.57383, -99.92297 34.57825, -99.9384 34.58199, -99.98332 34.57671, -99.99929 34.57547, -99.99929 34.5857, -99.99938 34.63204, -99.99958 34.74568, -99.99973 34.85933, -99.99992 34.973, -100.0001 35.08665, -100.0003 35.20027, -100.0005 35.31392, -100.0007 35.42759, -100.0009 35.54124, -100.0011 35.65494, -100.0013 35.76853, -100.0014 35.88216, -100.0016 35.99585, -100.0018 36.10948, -100.002 36.22317, -100.0022 36.33682, -100.0024 36.45044, -100.0024 36.49986, -100.0134 36.50005, -100.0678 36.50005, -100.1008 36.50005, -100.1939 36.50005, -100.3385 36.50005, -100.526 36.5001, -100.748 36.5001, -100.9957 36.50015, -101.2606 36.50015, -101.5341 36.50015, -101.8075 36.50015, -102.0725 36.50015, -102.3202 36.50017, -102.5421 36.50017, -102.7297 36.5002, -102.8743 36.5002, -102.9674 36.5002, -103.0002 36.5002))
"POLYGON ((-103.0002 36.5002, -103.0004 36.62513, -103.0005 36.75, -103.0007 36.87488, -103.0008 36.99981, -102.8773 36.99981, -102.7538 36.99981, -102.6303 36.99981, -102.5068 36.99981, -102.3832 36.99981, -102.2597 36.99981, -102.1362 36.99981, -102.0396 36.99981, -101.7817 36.99981, -101.5506 36.99981, -101.3195 36.99981, -101.0884 36.99981, -100.8573 36.99981, -100.6262 36.99981, -100.3951 36.99981, -100.1641 36.99981, -99.93298 36.99981, -99.70187 36.99981, -99.47079 36.99981, -99.23969 36.99981, -99.00861 36.99981, -98.77751 36.99981, -98.54645 36.99981, -98.31535 36.99981, -98.08427 36.99981, -97.85322 36.99981, -97.62214 36.99981, -97.39106 36.99981, -97.15995 36.99981, -96.92885 36.99981, -96.69777 36.99981, -96.46669 36.99981, -96.23559 36.99981, -96.00451 36.99981, -95.77341 36.99981, -95.54233 36.99981, -95.31122 36.99981, -95.08015 36.99981, -94.84909 36.99981, -94.61804 36.99981, -94.61806 36.87481, -94.61818 36.74981, -94.61823 36.62481, -94.61833 36.49983, -94.59592 36.36062, -94.5735 36.22142, -94.55109 36.08218, -94.52868 35.943, -94.50632 35.80381, -94.48391 35.66463, -94.46147 35.52544, -94.43908 35.38621, -94.44472 35.16883, -94.45034 34.95152, -94.45598 34.73416, -94.46159 34.5168, -94.46723 34.29947, -94.47282 34.08211, -94.47846 33.86475, -94.4841 33.64742, -94.4894 33.64847, -94.51474 33.64927, -94.5329 33.65686, -94.5329 33.65, -94.58034 33.66348, -94.59496 33.66988, -94.59174 33.67554, -94.58845 33.67925, -94.60986 33.68106, -94.63596 33.67732, -94.64357 33.6858, -94.65505 33.69158, -94.66872 33.69541, -94.6831 33.69778, -94.68947 33.69732, -94.70107 33.69278, -94.70793 33.69158, -94.71367 33.69361, -94.72219 33.70262, -94.73962 33.70999, -94.75549 33.73343, -94.7697 33.73877, -94.78193 33.73965, -94.80724 33.7462, -94.87275 33.75591, -94.91027 33.78658, -94.92492 33.80843, -94.93015 33.81451, -94.93991 33.82041, -94.94868 33.82356, -94.955 33.82976, -94.95744 33.84493, -94.96008 33.84971, -94.96652 33.85525, -94.97448 33.85979, -94.98166 33.86165, -95.0164 33.86258, -95.03176 33.86673, -95.04745 33.87593, -95.07941 33.90306, -95.09699 33.91299, -95.12831 33.91934, -95.13371 33.92515, -95.13766 33.93211, -95.14304 33.93804, -95.15432 33.94419, -95.22031 33.96294, -95.23674 33.96067, -95.25568 33.94795, -95.26179 33.93306, -95.26325 33.91546, -95.2686 33.90457, -95.28019 33.91006, -95.28625 33.9021, -95.29374 33.8981, -95.30285 33.89497, -95.31371 33.8896, -95.32485 33.89534, -95.33176 33.89551, -95.33483 33.8865, -95.33549 33.87862, -95.33769 33.87437, -95.34191 33.87178, -95.34846 33.86912, -95.35705 33.86822, -95.44059 33.87054, -95.45151 33.86912, -95.45783 33.87618, -95.46442 33.88052, -95.47202 33.88279, -95.48161 33.8834, -95.48608 33.88118, -95.49196 33.87718, -95.49709 33.87532, -95.49931 33.87967, -95.50344 33.88455, -95.50571 33.88802, -95.50554 33.8896, -95.53713 33.88992, -95.54977 33.89573, -95.54025 33.91006, -95.54809 33.92554, -95.55912 33.93323, -95.57189 33.93887, -95.58495 33.94795, -95.59811 33.95208, -95.60952 33.94346, -95.62282 33.92437, -95.63039 33.92466, -95.64699 33.92976, -95.65012 33.92747, -95.67372 33.9169, -95.68395 33.91482, -95.69516 33.90962, -95.7051 33.90293, -95.71159 33.89644, -95.72199 33.89729, -95.73698 33.89566, -95.76962 33.89644, -95.77656 33.89002, -95.77228 33.86187, -95.78327 33.85545, -95.79016 33.8576, -95.79557 33.86226, -95.80095 33.86912, -95.80888 33.86687, -95.81474 33.86226, -95.82082 33.85545, -95.8489 33.85149, -95.86039 33.85396, -95.91696 33.88406, -95.92758 33.89302, -95.93788 33.89556, -95.95046 33.88946, -95.96098 33.87998, -95.96542 33.87254, -95.97253 33.87303, -95.98784 33.86626, -96.00641 33.85545, -96.0402 33.84329, -96.05422 33.8418, -96.10541 33.8418, -96.1153 33.8397, -96.13586 33.83028, -96.1467 33.82818, -96.15641 33.82117, -96.17409 33.78672, -96.18391 33.77354, -96.20273 33.76368, -96.22077 33.76204, -96.26337 33.76604, -96.28952 33.76304, -96.29587 33.75406, -96.29548 33.73912, -96.30121 33.71831, -96.32878 33.70186, -96.35861 33.72561, -96.38705 33.76282, -96.41047 33.78658, -96.4287 33.78973, -96.49645 33.78658, -96.50405 33.78992, -96.50781 33.79786, -96.5102 33.80713, -96.51349 33.81451, -96.51891 33.81875, -96.54081 33.82818, -96.54089 33.82818, -96.58198 33.83872, -96.59423 33.84976, -96.59807 33.85337, -96.60107 33.85777, -96.60251 33.86285, -96.60256 33.86827, -96.6007 33.87322, -96.58986 33.8919, -96.5925 33.89783, -96.6008 33.90489, -96.62556 33.91338, -96.63928 33.91617, -96.64936 33.91597, -96.65453 33.91348, -96.65881 33.91018, -96.66516 33.90166, -96.67807 33.87066, -96.68078 33.8659, -96.684 33.8617, -96.68762 33.85789, -96.69196 33.85462, -96.69948 33.85169, -96.70969 33.84925, -96.72885 33.84717, -96.73981 33.84761, -96.74841 33.84888, -96.7537 33.85137, -96.77983 33.86788, -96.79011 33.8722, -96.79831 33.87334, -96.83395 33.86929, -96.84352 33.86993, -96.85078 33.87193, -96.85556 33.87483, -96.86762 33.88533, -96.8739 33.89366, -96.87856 33.90342, -96.88476 33.93157, -96.8892 33.94146, -96.89406 33.94627, -96.9009 33.95083, -96.91452 33.95594, -96.92409 33.95733, -96.93271 33.95733, -96.96689 33.95208, -96.9726 33.95, -96.97787 33.94754, -96.98508 33.9399, -96.98417 33.92684, -96.98654 33.90264, -97.00217 33.87532, -97.01767 33.85855, -97.03981 33.85359, -97.07524 33.86165, -97.07385 33.8462, -97.06657 33.83941, -97.05854 33.83443, -97.05475 33.82442, -97.05915 33.81726, -97.07831 33.80791, -97.08268 33.79712, -97.08495 33.76792, -97.09382 33.74234, -97.11252 33.7261, -97.14411 33.72513, -97.16755 33.73758, -97.18718 33.76011, -97.20058 33.78658, -97.20558 33.81077, -97.20134 33.82769, -97.18242 33.85293, -97.17766 33.86912, -97.18032 33.8816, -97.1881 33.89288, -97.19919 33.90247, -97.21179 33.91006, -97.21799 33.90699, -97.23058 33.90271, -97.236 33.89954, -97.24042 33.89483, -97.24365 33.88738, -97.26144 33.86177, -97.26703 33.85545, -97.29374 33.87544, -97.30578 33.87798, -97.32165 33.86912, -97.32385 33.86609, -97.32949 33.85591, -97.33249 33.85174, -97.33776 33.84734, -97.34821 33.84192, -97.35268 33.83841, -97.36044 33.83365, -97.37175 33.8305, -97.43644 33.82696, -97.45246 33.83536, -97.45883 33.85855, -97.46125 33.87928, -97.46926 33.89214, -97.484 33.8993, -97.50663 33.90264, -97.57094 33.89898, -97.58574 33.90635, -97.59474 33.925, -97.59391 33.96211, -97.60283 33.97898, -97.64064 33.99451, -97.67997 33.9835, -97.71496 33.96004, -97.80075 33.88785, -97.84023 33.86802, -97.884 33.86165, -97.92665 33.87315, -97.94929 33.88316, -97.9591 33.89302, -97.95668 33.90787, -97.95495 33.91407, -97.95287 33.92437, -97.94609 33.94502, -97.94621 33.95467, -97.95287 33.96531, -97.94665 33.97705, -97.9486 33.98743, -97.95595 33.99532, -97.96594 33.99327, -98.00143 34.00357, -98.05051 34.01192, -98.0884 34.02784, -98.09006 34.06092, -98.09533 34.08211, -98.09128 34.11182, -98.09067 34.13829, -98.10651 34.14966, -98.13188 34.14649, -98.17878 34.13235, -98.20954 34.12918, -98.34328 34.14346, -98.3686 34.13753, -98.3843 34.1229, -98.39641 34.10474, -98.41096 34.08821, -98.41655 34.07901, -98.44069 34.0753, -98.49069 34.07517, -98.50578 34.08257, -98.53918 34.11497, -98.55187 34.12237, -98.55871 34.12779, -98.57473 34.15169, -98.586 34.15711, -98.61855 34.16292, -98.63068 34.16333, -98.65317 34.15967, -98.72006 34.13663, -98.73215 34.14209, -98.85754 34.1648, -98.8777 34.17078, -98.95283 34.21172, -98.97526 34.2159, -98.99135 34.21275, -99.0071 34.20723, -99.02856 34.2043, -99.04853 34.20655, -99.08644 34.21631, -99.10705 34.21858, -99.15353 34.21692, -99.17592 34.22061, -99.19304 34.23223, -99.19714 34.2483, -99.19973 34.30245, -99.19614 34.31414, -99.19206 34.32222, -99.20939 34.33975, -99.2402 34.36255, -99.24948 34.37832, -99.25568 34.39656, -99.2655 34.41155, -99.28552 34.4178, -99.3048 34.41888, -99.31489 34.4208, -99.32336 34.424, -99.33205 34.43101, -99.3362 34.43826, -99.33908 34.44524, -99.34387 34.45132, -99.36237 34.46226, -99.37736 34.4627, -99.3874 34.45144, -99.39338 34.40166, -99.40139 34.38638, -99.41647 34.38038, -99.44006 34.38243, -99.46081 34.38931, -99.49902 34.40684, -99.54728 34.41246, -99.55612 34.41036, -99.56498 34.40564, -99.57651 34.39463, -99.58347 34.3899, -99.60173 34.38504, -99.66225 34.3899, -99.6808 34.39468, -99.69357 34.40616, -99.71315 34.43084, -99.882 34.56492, -99.89169 34.57041, -99.91384 34.57383, -99.92297 34.57825, -99.9384 34.58199, -99.98332 34.57671, -99.99929 34.57547, -99.99929 34.5857, -99.99938 34.63204, -99.99958 34.74568, -99.99973 34.85933, -99.99992 34.973, -100.0001 35.08665, -100.0003 35.20027, -100.0005 35.31392, -100.0007 35.42759, -100.0009 35.54124, -100.0011 35.65494, -100.0013 35.76853, -100.0014 35.88216, -100.0016 35.99585, -100.0018 36.10948, -100.002 36.22317, -100.0022 36.33682, -100.0024 36.45044, -100.0024 36.49986, -100.0134 36.50005, -100.0678 36.50005, -100.1008 36.50005, -100.1939 36.50005, -100.3385 36.50005, -100.526 36.5001, -100.748 36.5001, -100.9957 36.50015, -101.2606 36.50015, -101.5341 36.50015, -101.8075 36.50015, -102.0725 36.50015, -102.3202 36.50017, -102.5421 36.50017, -102.7297 36.5002, -102.8743 36.5002, -102.9674 36.5002, -103.0002 36.5002))"
""
""
"POLYGON ((-103.0002 36.5002, -103.0004 36.62513, -103.0005 36.75, -103.0007 36.87488, -103.0008 36.99981, -102.8773 36.99981, -102.7538 36.99981, -102.6303 36.99981, -102.5068 36.99981, -102.3832 36.99981, -102.2597 36.99981, -102.1362 36.99981, -102.0396 36.99981, -101.7817 36.99981, -101.5506 36.99981, -101.3195 36.99981, -101.0884 36.99981, -100.8573 36.99981, -100.6262 36.99981, -100.3951 36.99981, -100.1641 36.99981, -99.93298 36.99981, -99.70187 36.99981, -99.47079 36.99981, -99.23969 36.99981, -99.00861 36.99981, -98.77751 36.99981, -98.54645 36.99981, -98.31535 36.99981, -98.08427 36.99981, -97.85322 36.99981, -97.62214 36.99981, -97.39106 36.99981, -97.15995 36.99981, -96.92885 36.99981, -96.69777 36.99981, -96.46669 36.99981, -96.23559 36.99981, -96.00451 36.99981, -95.77341 36.99981, -95.54233 36.99981, -95.31122 36.99981, -95.08015 36.99981, -94.84909 36.99981, -94.61804 36.99981, -94.61806 36.87481, -94.61818 36.74981, -94.61823 36.62481, -94.61833 36.49983, -94.59592 36.36062, -94.5735 36.22142, -94.55109 36.08218, -94.52868 35.943, -94.50632 35.80381, -94.48391 35.66463, -94.46147 35.52544, -94.43908 35.38621, -94.44472 35.16883, -94.45034 34.95152, -94.45598 34.73416, -94.46159 34.5168, -94.46723 34.29947, -94.47282 34.08211, -94.47846 33.86475, -94.4841 33.64742, -94.4894 33.64847, -94.51474 33.64927, -94.5329 33.65686, -94.5329 33.65, -94.58034 33.66348, -94.59496 33.66988, -94.59174 33.67554, -94.58845 33.67925, -94.60986 33.68106, -94.63596 33.67732, -94.64357 33.6858, -94.65505 33.69158, -94.66872 33.69541, -94.6831 33.69778, -94.68947 33.69732, -94.70107 33.69278, -94.70793 33.69158, -94.71367 33.69361, -94.72219 33.70262, -94.73962 33.70999, -94.75549 33.73343, -94.7697 33.73877, -94.78193 33.73965, -94.80724 33.7462, -94.87275 33.75591, -94.91027 33.78658, -94.92492 33.80843, -94.93015 33.81451, -94.93991 33.82041, -94.94868 33.82356, -94.955 33.82976, -94.95744 33.84493, -94.96008 33.84971, -94.96652 33.85525, -94.97448 33.85979, -94.98166 33.86165, -95.0164 33.86258, -95.03176 33.86673, -95.04745 33.87593, -95.07941 33.90306, -95.09699 33.91299, -95.12831 33.91934, -95.13371 33.92515, -95.13766 33.93211, -95.14304 33.93804, -95.15432 33.94419, -95.22031 33.96294, -95.23674 33.96067, -95.25568 33.94795, -95.26179 33.93306, -95.26325 33.91546, -95.2686 33.90457, -95.28019 33.91006, -95.28625 33.9021, -95.29374 33.8981, -95.30285 33.89497, -95.31371 33.8896, -95.32485 33.89534, -95.33176 33.89551, -95.33483 33.8865, -95.33549 33.87862, -95.33769 33.87437, -95.34191 33.87178, -95.34846 33.86912, -95.35705 33.86822, -95.44059 33.87054, -95.45151 33.86912, -95.45783 33.87618, -95.46442 33.88052, -95.47202 33.88279, -95.48161 33.8834, -95.48608 33.88118, -95.49196 33.87718, -95.49709 33.87532, -95.49931 33.87967, -95.50344 33.88455, -95.50571 33.88802, -95.50554 33.8896, -95.53713 33.88992, -95.54977 33.89573, -95.54025 33.91006, -95.54809 33.92554, -95.55912 33.93323, -95.57189 33.93887, -95.58495 33.94795, -95.59811 33.95208, -95.60952 33.94346, -95.62282 33.92437, -95.63039 33.92466, -95.64699 33.92976, -95.65012 33.92747, -95.67372 33.9169, -95.68395 33.91482, -95.69516 33.90962, -95.7051 33.90293, -95.71159 33.89644, -95.72199 33.89729, -95.73698 33.89566, -95.76962 33.89644, -95.77656 33.89002, -95.77228 33.86187, -95.78327 33.85545, -95.79016 33.8576, -95.79557 33.86226, -95.80095 33.86912, -95.80888 33.86687, -95.81474 33.86226, -95.82082 33.85545, -95.8489 33.85149, -95.86039 33.85396, -95.91696 33.88406, -95.92758 33.89302, -95.93788 33.89556, -95.95046 33.88946, -95.96098 33.87998, -95.96542 33.87254, -95.97253 33.87303, -95.98784 33.86626, -96.00641 33.85545, -96.0402 33.84329, -96.05422 33.8418, -96.10541 33.8418, -96.1153 33.8397, -96.13586 33.83028, -96.1467 33.82818, -96.15641 33.82117, -96.17409 33.78672, -96.18391 33.77354, -96.20273 33.76368, -96.22077 33.76204, -96.26337 33.76604, -96.28952 33.76304, -96.29587 33.75406, -96.29548 33.73912, -96.30121 33.71831, -96.32878 33.70186, -96.35861 33.72561, -96.38705 33.76282, -96.41047 33.78658, -96.4287 33.78973, -96.49645 33.78658, -96.50405 33.78992, -96.50781 33.79786, -96.5102 33.80713, -96.51349 33.81451, -96.51891 33.81875, -96.54081 33.82818, -96.54089 33.82818, -96.58198 33.83872, -96.59423 33.84976, -96.59807 33.85337, -96.60107 33.85777, -96.60251 33.86285, -96.60256 33.86827, -96.6007 33.87322, -96.58986 33.8919, -96.5925 33.89783, -96.6008 33.90489, -96.62556 33.91338, -96.63928 33.91617, -96.64936 33.91597, -96.65453 33.91348, -96.65881 33.91018, -96.66516 33.90166, -96.67807 33.87066, -96.68078 33.8659, -96.684 33.8617, -96.68762 33.85789, -96.69196 33.85462, -96.69948 33.85169, -96.70969 33.84925, -96.72885 33.84717, -96.73981 33.84761, -96.74841 33.84888, -96.7537 33.85137, -96.77983 33.86788, -96.79011 33.8722, -96.79831 33.87334, -96.83395 33.86929, -96.84352 33.86993, -96.85078 33.87193, -96.85556 33.87483, -96.86762 33.88533, -96.8739 33.89366, -96.87856 33.90342, -96.88476 33.93157, -96.8892 33.94146, -96.89406 33.94627, -96.9009 33.95083, -96.91452 33.95594, -96.92409 33.95733, -96.93271 33.95733, -96.96689 33.95208, -96.9726 33.95, -96.97787 33.94754, -96.98508 33.9399, -96.98417 33.92684, -96.98654 33.90264, -97.00217 33.87532, -97.01767 33.85855, -97.03981 33.85359, -97.07524 33.86165, -97.07385 33.8462, -97.06657 33.83941, -97.05854 33.83443, -97.05475 33.82442, -97.05915 33.81726, -97.07831 33.80791, -97.08268 33.79712, -97.08495 33.76792, -97.09382 33.74234, -97.11252 33.7261, -97.14411 33.72513, -97.16755 33.73758, -97.18718 33.76011, -97.20058 33.78658, -97.20558 33.81077, -97.20134 33.82769, -97.18242 33.85293, -97.17766 33.86912, -97.18032 33.8816, -97.1881 33.89288, -97.19919 33.90247, -97.21179 33.91006, -97.21799 33.90699, -97.23058 33.90271, -97.236 33.89954, -97.24042 33.89483, -97.24365 33.88738, -97.26144 33.86177, -97.26703 33.85545, -97.29374 33.87544, -97.30578 33.87798, -97.32165 33.86912, -97.32385 33.86609, -97.32949 33.85591, -97.33249 33.85174, -97.33776 33.84734, -97.34821 33.84192, -97.35268 33.83841, -97.36044 33.83365, -97.37175 33.8305, -97.43644 33.82696, -97.45246 33.83536, -97.45883 33.85855, -97.46125 33.87928, -97.46926 33.89214, -97.484 33.8993, -97.50663 33.90264, -97.57094 33.89898, -97.58574 33.90635, -97.59474 33.925, -97.59391 33.96211, -97.60283 33.97898, -97.64064 33.99451, -97.67997 33.9835, -97.71496 33.96004, -97.80075 33.88785, -97.84023 33.86802, -97.884 33.86165, -97.92665 33.87315, -97.94929 33.88316, -97.9591 33.89302, -97.95668 33.90787, -97.95495 33.91407, -97.95287 33.92437, -97.94609 33.94502, -97.94621 33.95467, -97.95287 33.96531, -97.94665 33.97705, -97.9486 33.98743, -97.95595 33.99532, -97.96594 33.99327, -98.00143 34.00357, -98.05051 34.01192, -98.0884 34.02784, -98.09006 34.06092, -98.09533 34.08211, -98.09128 34.11182, -98.09067 34.13829, -98.10651 34.14966, -98.13188 34.14649, -98.17878 34.13235, -98.20954 34.12918, -98.34328 34.14346, -98.3686 34.13753, -98.3843 34.1229, -98.39641 34.10474, -98.41096 34.08821, -98.41655 34.07901, -98.44069 34.0753, -98.49069 34.07517, -98.50578 34.08257, -98.53918 34.11497, -98.55187 34.12237, -98.55871 34.12779, -98.57473 34.15169, -98.586 34.15711, -98.61855 34.16292, -98.63068 34.16333, -98.65317 34.15967, -98.72006 34.13663, -98.73215 34.14209, -98.85754 34.1648, -98.8777 34.17078, -98.95283 34.21172, -98.97526 34.2159, -98.99135 34.21275, -99.0071 34.20723, -99.02856 34.2043, -99.04853 34.20655, -99.08644 34.21631, -99.10705 34.21858, -99.15353 34.21692, -99.17592 34.22061, -99.19304 34.23223, -99.19714 34.2483, -99.19973 34.30245, -99.19614 34.31414, -99.19206 34.32222, -99.20939 34.33975, -99.2402 34.36255, -99.24948 34.37832, -99.25568 34.39656, -99.2655 34.41155, -99.28552 34.4178, -99.3048 34.41888, -99.31489 34.4208, -99.32336 34.424, -99.33205 34.43101, -99.3362 34.43826, -99.33908 34.44524, -99.34387 34.45132, -99.36237 34.46226, -99.37736 34.4627, -99.3874 34.45144, -99.39338 34.40166, -99.40139 34.38638, -99.41647 34.38038, -99.44006 34.38243, -99.46081 34.38931, -99.49902 34.40684, -99.54728 34.41246, -99.55612 34.41036, -99.56498 34.40564, -99.57651 34.39463, -99.58347 34.3899, -99.60173 34.38504, -99.66225 34.3899, -99.6808 34.39468, -99.69357 34.40616, -99.71315 34.43084, -99.882 34.56492, -99.89169 34.57041, -99.91384 34.57383, -99.92297 34.57825, -99.9384 34.58199, -99.98332 34.57671, -99.99929 34.57547, -99.99929 34.5857, -99.99938 34.63204, -99.99958 34.74568, -99.99973 34.85933, -99.99992 34.973, -100.0001 35.08665, -100.0003 35.20027, -100.0005 35.31392, -100.0007 35.42759, -100.0009 35.54124, -100.0011 35.65494, -100.0013 35.76853, -100.0014 35.88216, -100.0016 35.99585, -100.0018 36.10948, -100.002 36.22317, -100.0022 36.33682, -100.0024 36.45044, -100.0024 36.49986, -100.0134 36.50005, -100.0678 36.50005, -100.1008 36.50005, -100.1939 36.50005, -100.3385 36.50005, -100.526 36.5001, -100.748 36.5001, -100.9957 36.50015, -101.2606 36.50015, -101.5341 36.50015, -101.8075 36.50015, -102.0725 36.50015, -102.3202 36.50017, -102.5421 36.50017, -102.7297 36.5002, -102.8743 36.5002, -102.9674 36.5002, -103.0002 36.5002))"
""
""
st_cast(polygon_sf, "POLYGON")
sf_poly = st_cast(polygon_sf, "POLYGON")
library(sf)
# Assuming `sf_poly` is your sf object containing polygon geometries
reverse_polygon_order <- function(sf_poly) {
# Function to reverse the order of coordinates for each polygon
reverse_coords <- function(geometry) {
if (class(geometry) == "MULTIPOLYGON") {
new_poly <- lapply(geometry, function(poly) {
lapply(poly, function(linear_ring) {
linear_ring[nrow(linear_ring):1, ]
})
})
return(st_multipolygon(new_poly))
} else if (class(geometry) == "POLYGON") {
new_poly <- lapply(geometry, function(linear_ring) {
linear_ring[nrow(linear_ring):1, ]
})
return(st_polygon(new_poly))
} else {
stop("Geometry type not supported")
}
}
# Apply the reversing function to every geometry
sf
""
""
""
""
""
")"
()
reverse_polygon_order <- function(sf_poly) {
# Function to reverse the order of coordinates for each polygon
reverse_coords <- function(geometry) {
if (class(geometry) == "MULTIPOLYGON") {
new_poly <- lapply(geometry, function(poly) {
lapply(poly, function(linear_ring) {
linear_ring[nrow(linear_ring):1, ]
})
})
return(st_multipolygon(new_poly))
} else if (class(geometry) == "POLYGON") {
new_poly <- lapply(geometry, function(linear_ring) {
linear_ring[nrow(linear_ring):1, ]
})
return(st_polygon(new_poly))
} else {
stop("Geometry type not supported")
}
}
# Apply the reversing function to every geometry
sf_poly$geometry <- lapply(sf_poly$geometry, reverse_coords)
return(sf_poly)
}
reverse_polygon_order(sf_poly)
reverse_polygon_order(sf_poly) |> sf::as_text()
reverse_polygon_order(sf_poly) |> sf::st_as_text()
reverse_polygon_order(sf_poly)[[1]] |> sf::st_as_text()
wkt
dd <- occ_data(geometry = wkt, geom_big = "bbox", limit = 30)
dd
occ_data(geometry = wkt, geom_big = "axe", limit = 30)
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
Sys.getenv("GBIF_PASSWORD")
Sys.getenv("GBIF_PWD")
GBIF_PWD="dog"
Sys.getenv("GBIF_PWD")
occ_download(pred("taxonKey", 2436775))
library(rgbif)
occ_download(pred("taxonKey", 2436775))
install.packages("rgbif")
library(rgbif)
sql<-"SELECT publishingcountry, specieskey, COUNT(*) as occurrence_count
FROM occurrence
WHERE publishingcountry IS NOT NULL AND specieskey IS NOT NULL
GROUP BY country, specieskey
ORDER BY occurrence_count DESC;"
sql
occ_download_sql_prep(sql)
sql<-"SELECT publishingcountry, specieskey, COUNT(*) as occurrence_count
FROM occurrence
WHERE publishingcountry IS NOT NULL AND specieskey IS NOT NULL
GROUP BY countrycode, specieskey
ORDER BY occurrence_count DESC;"
occ_download_sql_prep(sql)
sql<-"SELECT publishingcountry, specieskey, COUNT(*) as occurrence_count
FROM occurrence
WHERE publishingcountry IS NOT NULL AND specieskey IS NOT NULL
GROUP BY publishingcountry, specieskey
ORDER BY occurrence_count DESC;"
occ_download_sql_prep(sql)
sql<-"SELECT publishingcountry, specieskey, COUNT(*) as occurrence_count
FROM occurrence
WHERE publishingcountry IS NOT NULL AND specieskey IS NOT NULL
GROUP BY publishingcountry, specieskey
ORDER BY occurrence_count DESC;"
occ_download_sql(sql)
occ_download_wait('0035157-240906103802322')
d <- occ_download_get('0035157-240906103802322') %>%
occ_download_import() |>
head() |>
knitr::kable()
d
Sys.Date()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
